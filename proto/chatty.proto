syntax = "proto3";

option go_package = "github.com/gouthamkrishnakv/chatty/proto";

import "google/api/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) =
{
  info: {
    title: "ChattyService";
    version: "1.0";
    contact: {
      name: "Goutham Krishna K V";
      url: "https://github.com/gouthamkrishnakv";
    };
  };
  schemes: HTTP;
  consumes: "application/json";
  products: "application/json";
  responses: {
    key: "404";
    value: {
      description: "Returned when the resource does not exist.";
      schema: {
        json_schema: {
          type: STRING;
        }
      }
    }
  }
};

message User {
  uint32 UserID = 1;
  string Nickname = 2;
}

message MessageObj {
  uint32 MessageID = 1;
  User Author = 2;
  string Message = 3;
}

enum StatusCode {
  // 0 is success and non-0 is falure following the unix process code
  // convention.
  Success = 0;
  Failure = 1;
}

message JoinRequest {
  string Nickname = 1;
}

message JoinResponse {
  // Join can either be success or failure, determined by 0 or 1.
  User user = 1;
}

message CloseRequest {
  uint32 UserID = 1;
}

message CloseResponse {
  StatusCode status = 1;
}

service ChatService {
  rpc Join (JoinRequest) returns (JoinResponse) {
    option(google.api.http) = {
     get: "/api/join",
    };
  };
  rpc Send  (MessageObj) returns (MessageObj) {};
  rpc StreamMessage (User) returns (stream MessageObj) {};
  rpc Close (CloseRequest) returns (CloseResponse) {};
}
